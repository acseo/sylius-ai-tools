<script>
    document.addEventListener('DOMContentLoaded', function () {
        var accordionTitles = document.querySelectorAll('.accordion .title');
        accordionTitles.forEach(function (title) {
            title.addEventListener('click', function () {
                {% for modalType in ['description_from_text', 'description_from_pictures'] %}
                    {% for locale in get_all_locales_codes() %}
                        $('#generate_{{ modalType }}_{{ locale }}_modal').modal('hide').removeAttr('style');
                        $('#preview_{{ modalType }}_{{ locale }}_modal').modal('hide').removeAttr('style');
                        $('#{{ modalType }}_{{ locale }}_form').removeClass('loading');
                    {% endfor %}
                {% endfor %}
            });
        });

        var forms = {};
        var buttons = {
            generate: {},
            close: {},
            validate: {},
            cancel: {}
        };

        {% for modalType in ['description_from_text', 'description_from_pictures'] %}
            {% for locale in get_all_locales_codes() %}
                var formKey = '{{ modalType }}_{{ locale }}_form';
                forms[formKey] = document.getElementById(formKey);

                buttons.generate['{{ modalType }}_{{ locale }}_button'] = document.getElementById('generate_{{ modalType }}_{{ locale }}_button');
                buttons.close['{{ modalType }}_{{ locale }}_modal'] = document.getElementById('close_{{ modalType }}_{{ locale }}_modal');
                buttons.validate['{{ modalType }}_{{ locale }}_modal'] = document.getElementById('validate_{{ modalType }}_{{ locale }}_modal');
                buttons.cancel['{{ modalType }}_{{ locale }}_modal'] = document.getElementById('cancel_{{ modalType }}_{{ locale }}_modal');

                if (buttons.generate['{{ modalType }}_{{ locale }}_button']) {
                    buttons.generate['{{ modalType }}_{{ locale }}_button'].addEventListener('click', function () {
                        $('#generate_{{ modalType }}_{{ locale }}_modal').modal('show');
                    });
                }

                if (buttons.close['{{ modalType }}_{{ locale }}_modal']) {
                    buttons.close['{{ modalType }}_{{ locale }}_modal'].addEventListener('click', function () {
                        $('#generate_{{ modalType }}_{{ locale }}_modal').modal('hide');
                        $('#{{ modalType }}_{{ locale }}_form').removeClass('loading');
                    });
                }

                var form = forms[formKey];
                if (form) {
                    form.addEventListener('submit', function (event) {
                        event.preventDefault();
                        var formData = new FormData(this);

                        var descriptionContent = document.getElementById('preview_content_{{ modalType }}_{{ locale }}_modal');
                        descriptionContent.innerHTML = '<div class="ui active inline loader"></div>{{ "sylius.ui.loading" | trans }}';

                        fetch(this.action, {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        })
                            .then(function(response) {
                                if (!response.ok) {
                                    throw new Error('{{ "sylius.ui.error_network" | trans }}' + response.statusText);
                                }
                                return response.json();
                            })
                            .then(function(data) {
                                var titleElement = document.querySelector(`#preview_{{ modalType }}_{{ locale }}_modal .title`);
                                var descriptionElement = document.querySelector(`#preview_{{ modalType }}_{{ locale }}_modal .description p`);
                                var shortDescriptionElement = document.querySelector(`#preview_{{ modalType }}_{{ locale }}_modal .short-description`);
                                var metaDescriptionElement = document.querySelector(`#preview_{{ modalType }}_{{ locale }}_modal .meta-description`);
                                var metaKeywordsElement = document.querySelector(`#preview_{{ modalType }}_{{ locale }}_modal .meta-keywords`);

                                if (data.descriptions && data.descriptions.content && data.descriptions.content.length > 0) {
                                    var item = data.descriptions.content[0];
                                    titleElement.innerText = item.title || '';
                                    descriptionElement.innerText = item.description || '';
                                    shortDescriptionElement.innerText = item.short_description || '';
                                    metaDescriptionElement.innerText = item.meta_description || '';
                                    metaKeywordsElement.innerText = item.meta_keywords || '';
                                } else {
                                    titleElement.innerText = '{{ "sylius.ui.no_results" | trans }}';
                                    descriptionElement.innerText = '';
                                    shortDescriptionElement.innerText = '';
                                    metaDescriptionElement.innerText = '';
                                    metaKeywordsElement.innerText = '';
                                }

                                $('#{{ modalType }}_{{ locale }}_form').removeClass('loading');

                                descriptionContent.innerHTML = '';
                                $('#preview_{{ modalType }}_{{ locale }}_modal').modal('show');
                            })
                            .catch(function(error) {
                                console.error('Erreur:', error);
                                descriptionContent.innerHTML = '<p>{{ "sylius.ui.error_generating" | trans }}</p>';
                            });
                    });
                }

                if (buttons.validate['{{ modalType }}_{{ locale }}_modal']) {
                    buttons.validate['{{ modalType }}_{{ locale }}_modal'].addEventListener('click', function () {
                        $('#{{ modalType }}_{{ locale }}_form').removeClass('loading');
                        $('#preview_{{ modalType }}_{{ locale }}_modal').modal('hide');
                        $('#generate_{{ modalType }}_{{ locale }}_modal').modal('hide');

                        var form = forms['{{ modalType }}_{{ locale }}_form'];
                        if (form) {
                            form.submit();
                        }
                    });
                }

                if (buttons.cancel['{{ modalType }}_{{ locale }}_modal']) {
                    buttons.cancel['{{ modalType }}_{{ locale }}_modal'].addEventListener('click', function () {
                        $('#{{ modalType }}_{{ locale }}_form').removeClass('loading');
                        $('#preview_{{ modalType }}_{{ locale }}_modal').modal('hide');
                        $('#generate_{{ modalType }}_{{ locale }}_modal').modal('hide');
                    });
                }
            {% endfor %}
        {% endfor %}
    });

    document.addEventListener('DOMContentLoaded', function ()
    {
        {% for locale in get_all_locales_codes() %}
        var fileInput = document.getElementById('product_description_from_pictures_form_pictures');
        var previewDiv = document.getElementById('image_previews_{{ locale }}');

        var filePreloadedInput = document.getElementById('product_description_from_pictures_form_preloaded_images');
        if (filePreloadedInput) {

            var preloadedImages = filePreloadedInput.value;
            if (preloadedImages) {
                var imageUrls = preloadedImages.split(',');

                imageUrls.forEach(function(url) {
                    var imgWrapper = document.createElement('div');
                    imgWrapper.classList.add('img-wrapper');

                    var imgElement = document.createElement('img');
                    imgElement.src = url;
                    imgElement.alt = 'Image preview';
                    imgElement.classList.add('img-preview');
                    imgElement.style.width = '100px';

                    var removeButton = document.createElement('button');
                    removeButton.textContent = 'X';
                    removeButton.classList.add('remove-btn');

                    removeButton.addEventListener('click', function() {
                        imgWrapper.remove();
                        updatePreloadedImages();
                    });

                    imgWrapper.appendChild(imgElement);
                    imgWrapper.appendChild(removeButton);
                    previewDiv.appendChild(imgWrapper);
                });
            }
        }

        if (fileInput) {
            fileInput.addEventListener('change', function(event) {
                var files = event.target.files;

                for (var i = 0; i < files.length; i++) {
                    var fileReader = new FileReader();
                    fileReader.onload = function(e) {
                        var imgWrapper = document.createElement('div');
                        imgWrapper.classList.add('img-wrapper');

                        var imgElement = document.createElement('img');
                        imgElement.src = e.target.result;
                        imgElement.classList.add('img-preview');
                        imgElement.style.width = '100px';

                        var removeButton = document.createElement('button');
                        removeButton.textContent = 'X';
                        removeButton.classList.add('remove-btn');

                        removeButton.addEventListener('click', function() {
                            imgWrapper.remove();
                            updatePreloadedImages();
                        });

                        imgWrapper.appendChild(imgElement);
                        imgWrapper.appendChild(removeButton);
                        previewDiv.appendChild(imgWrapper);
                    };
                    fileReader.readAsDataURL(files[i]);
                }
            });
        }

        function updatePreloadedImages() {
            var fileInput = document.getElementById('product_description_from_pictures_form_pictures');
            var files = Array.from(fileInput.files);
            var imagesToKeep = [];

            document.querySelectorAll('.img-wrapper').forEach(function(wrapper) {
                var img = wrapper.querySelector('img');
                if (img.src.startsWith('data:image')) {
                    var dataURL = img.src;
                    var file = convertDataURLToFile(dataURL);
                    imagesToKeep.push(file);
                }
            });

            var newFileList = new DataTransfer();
            imagesToKeep.forEach(function(file) {
                newFileList.items.add(file);
            });

            fileInput.files = newFileList.files;

            var updatedImages = Array.from(document.querySelectorAll('.img-wrapper img')).map(function(img) {
                return img.src;
            }).join(',');

            document.getElementById('product_description_from_pictures_form_preloaded_images').value = updatedImages;
        }

        function convertDataURLToFile(dataURL) {
            var arr = dataURL.split(',');
            var mime = arr[0].match(/:(.*?);/)[1];
            var bstr = atob(arr[1]);
            var n = bstr.length;
            var u8arr = new Uint8Array(n);
            while(n--){
                u8arr[n] = bstr.charCodeAt(n);
            }
            return new File([u8arr], 'file.png', {type:mime});
        }
        {% endfor %}
    });
</script>
